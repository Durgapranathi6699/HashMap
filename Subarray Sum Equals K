class Solution {
    public int subarraySum(int[] nums, int k) {
     //no.of subarray with sum k 
        //store sum and its frquency
        //if map contains sum-k add its frequency 
        //which gives no.of subarray with sum k
        HashMap<Integer,Integer> map=new HashMap<>();
        int ans=0;
        int sum=0;
        map.put(0,1);//sum=0 fre=1
        for(int i=0;i<nums.length;i++){
            sum=sum+nums[i];
            if(map.containsKey(sum-k)){
                ans=ans+map.get(sum-k);
            }
            map.put(sum,map.getOrDefault(sum,0)+1);
        }
        return ans;
    }
}
//brute force generate all subarray and check how are giving sum=k
// int count=0;
//     for(int i=0;i<nums.length;i++){
//          int sum=0;
//         for(int j=i;j<nums.length;j++){
//            sum=sum+nums[j];
//             if(sum==k){
//                 count++;
//             }
//     }
// }
// return count;
// }
// }
